[project]
name = "bpm-detector"
version = "1.1.0"
description = "A Python tool for automatic detection of BPM (tempo) and musical key from audio files"
authors = [
    { name = "libraz", email = "libraz@libraz.net" }
]
dependencies = [
    "librosa>=0.11.0",
    "soundfile>=0.13.1",
    "audioread>=3.0.1",
    "numpy>=2.2.6",
    "tqdm>=4.67.1",
    "colorama>=0.4.6",
    "scikit-learn>=1.3.0",
    "scipy>=1.15.3",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "pandas>=2.0.0",
    "psutil>=5.9.0",
    "resampy>=0.4.3",
]
readme = "README.md"
requires-python = ">= 3.8"
license = { text = "MIT" }
keywords = ["audio", "music", "bpm", "tempo", "key", "detection", "analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/libraz/bpm-detector"
Repository = "https://github.com/libraz/bpm-detector"
Issues = "https://github.com/libraz/bpm-detector/issues"

[project.scripts]
bpm-detector = "bpm_detector.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "autoflake>=2.3.1",
    "monkeytype>=23.3.0",
]

[tool.rye.scripts]
lint-flake8 = "flake8 src/ tests/"
lint-mypy = "mypy src/"
lint = { chain = ["lint-flake8", "lint-mypy"] }
format-black = "black src/ tests/"
format-isort = "isort src/ tests/"
format-autoflake = "autoflake --remove-all-unused-imports --remove-unused-variables --in-place --recursive src/ tests/"
format = { chain = ["format-autoflake", "format-black", "format-isort"] }
type-check = "mypy src/"
test = "pytest tests/"
check-all = { chain = ["lint", "test"] }
fix = { chain = ["format", "lint"] }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/bpm_detector"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --verbose"
filterwarnings = [
    "ignore::UserWarning:librosa.*",
    "ignore::RuntimeWarning:sklearn.*",
    "ignore::RuntimeWarning:numpy.*",
    "ignore::FutureWarning",
    "ignore::DeprecationWarning",
    "ignore:n_fft=.*:UserWarning",
    "ignore:Trying to estimate tuning.*:UserWarning",
    "ignore:divide by zero encountered.*:RuntimeWarning",
    "ignore:overflow encountered.*:RuntimeWarning",
    "ignore:invalid value encountered.*:RuntimeWarning",
]

[tool.black]
line-length = 120
skip-string-normalization = true
skip-magic-trailing-comma = true


[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true
follow_imports = "silent"
show_column_numbers = true
show_error_codes = true
packages = ["bpm_detector"]
mypy_path = "src"
exclude = [
    "examples/.*",
]

[[tool.mypy.overrides]]
module = [
    "librosa.*",
    "soundfile.*",
    "sklearn.*",
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
    "pandas.*",
    "psutil.*",
    "tqdm.*",
    "colorama.*",
    "resampy.*"
]
ignore_missing_imports = true
